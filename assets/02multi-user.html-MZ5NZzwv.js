import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as s,o as i,c as a,a as e,b as o,d as n,f as r}from"./app-0SoiKzJB.js";const h={},c=e("h1",{id:"hololens通信",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hololens通信","aria-hidden":"true"},"#"),o(" HoloLens通信")],-1),d=e("h3",{id:"与pc端音视频通信",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#与pc端音视频通信","aria-hidden":"true"},"#"),o(" 与pc端音视频通信")],-1),u=e("p",null,"官方的解决方案：",-1),p=e("ol",null,[e("li",null,"后台系统：可接收HoloLens端音视频，原理：Azure媒体服务"),e("li",null,"Dynamic 365 Remote Assist：通过Microsoft Teams互联，可标注，原理：Azure通信服务+Azure Spatial Anchors")],-1),_=e("p",null,"方案：",-1),m={href:"https://github.com/microsoft/MixedReality-WebRTC",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/ShanguUncle/UnityChatSDK/blob/master/README.zh.md",target:"_blank",rel:"noopener noreferrer"},b=e("li",null,"DataMesh One",-1),f=r('<h3 id="实时数据传输" tabindex="-1"><a class="header-anchor" href="#实时数据传输" aria-hidden="true">#</a> 实时数据传输</h3><p>hololens→电脑：</p><ol><li>网络连接</li><li>TCP/IP、UDP或者<strong>WebSocket</strong>等协议进行通信</li><li>hololens中的数据以<strong>网络数据包</strong>的形式传输，电脑接收数据并处理</li></ol><p>数据→hololens：</p><ol><li>远程服务器与应用连接：将数据存储在远程服务器上，应用程序<strong>通过网络连接到服务器来获取数据</strong> 。应用程序可以定期或根据需要从服务器下载新数据，并在 HoloLens 中使用。</li><li>实时数据同步：使用 <strong>WebSocket</strong> 或类似的实时通信技术，建立 HoloLens 和服务器之间的连接，以便在网页上更新数据时，能够即时地传输到 HoloLens 应用中。</li><li>Web API 与 Unity 通信：在 Unity 中，可以使用 <strong>UnityWebRequest</strong> 或类似的功能与 Web API 进行通信，从而在 HoloLens 应用中通过 <strong>HTTP 请求获取最新的数据</strong> 。</li><li>Asset Bundle 动态加载：将数据打包成 <strong>Asset Bundle</strong> ，存储在远程服务器上，然后在运行时动态加载这些 Bundle 到 HoloLens 应用程序中。</li></ol><h3 id="hololens设备间连接" tabindex="-1"><a class="header-anchor" href="#hololens设备间连接" aria-hidden="true">#</a> HoloLens设备间连接</h3>',6),x={href:"https://learn.microsoft.com/zh-cn/windows/mixed-reality/develop/unity/tutorials/mr-learning-sharing-01",target:"_blank",rel:"noopener noreferrer"},y=r('<h3 id="第三视角查看" tabindex="-1"><a class="header-anchor" href="#第三视角查看" aria-hidden="true">#</a> 第三视角查看</h3><p>官方方案：</p><p>基于Azure Kinect（传感器）的云服务</p><p>其他方案：</p><p>Spectator-view连接 → vuforia SDK实现图片识别定位 → ARcore实现空间同步</p><p>网络：lcp网络套接字（<strong>Socket</strong>异步套接字<strong>网络开发</strong>）or UNET，hololens间同步锚点，手机连接扫码</p>',6);function A(R,S){const t=s("ExternalLinkIcon");return i(),a("div",null,[c,d,u,p,_,e("ol",null,[e("li",null,[o("webRTC连接：MixedReality-WebRTC "),e("a",m,[o("https://github.com/microsoft/MixedReality-WebRTC"),n(t)]),o(" 插件：webRTC Video Chat、Holo Video Chat")]),e("li",null,[o("开源SDK：UnityChatSDK（仿dynamic365功能、付费）"),e("a",g,[o("https://github.com/ShanguUncle/UnityChatSDK/blob/master/README.zh.md"),n(t)])]),b]),f,e("p",null,[o("PUN连接："),e("a",x,[o("https://learn.microsoft.com/zh-cn/windows/mixed-reality/develop/unity/tutorials/mr-learning-sharing-01"),n(t)])]),y])}const T=l(h,[["render",A],["__file","02multi-user.html.vue"]]);export{T as default};
