const t=JSON.parse(`{"key":"v-c2dc9ee4","path":"/mymd/mianshi/mianshibaodian/05TypeScript.html","title":"TypeScript","lang":"zh-CN","frontmatter":{"icon":"list","date":"2024-03-10T00:00:00.000Z","category":["面试"],"order":5,"editLink":false,"article":false,"description":"TypeScript 1.什么是TypeScript？ TypeScript是JavaScript的加强版，它给JavaScript添加了可选的静态类型和基于类的面向对象编程，它拓展了JavaScript的语法。 而且TypeScript不存在跟浏览器不兼容的问题，因为在编译时，它产生的都是JavaScript代码。 2.TypeScript 和 JavaScript 的区别是什么？ Typescript 是 JavaScript 的超集，可以被编译成 JavaScript 代码。 用 JavaScript 编写的合法代码，在 TypeScript 中依然有效。Typescript 是纯面向对象的编程语言，包含类和接口的概念。 程序员可以用它来编写面向对象的服务端或客户端程序，并将它们编译成 JavaScript 代码。","head":[["meta",{"property":"og:url","content":"http://xlinwork.online/mymd/mianshi/mianshibaodian/05TypeScript.html"}],["meta",{"property":"og:site_name","content":"lnitia's blog"}],["meta",{"property":"og:title","content":"TypeScript"}],["meta",{"property":"og:description","content":"TypeScript 1.什么是TypeScript？ TypeScript是JavaScript的加强版，它给JavaScript添加了可选的静态类型和基于类的面向对象编程，它拓展了JavaScript的语法。 而且TypeScript不存在跟浏览器不兼容的问题，因为在编译时，它产生的都是JavaScript代码。 2.TypeScript 和 JavaScript 的区别是什么？ Typescript 是 JavaScript 的超集，可以被编译成 JavaScript 代码。 用 JavaScript 编写的合法代码，在 TypeScript 中依然有效。Typescript 是纯面向对象的编程语言，包含类和接口的概念。 程序员可以用它来编写面向对象的服务端或客户端程序，并将它们编译成 JavaScript 代码。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-22T09:12:29.000Z"}],["meta",{"property":"article:author","content":"lnitia"}],["meta",{"property":"article:published_time","content":"2024-03-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-22T09:12:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"TypeScript\\",\\"description\\":\\"TypeScript 1.什么是TypeScript？ TypeScript是JavaScript的加强版，它给JavaScript添加了可选的静态类型和基于类的面向对象编程，它拓展了JavaScript的语法。 而且TypeScript不存在跟浏览器不兼容的问题，因为在编译时，它产生的都是JavaScript代码。 2.TypeScript 和 JavaScript 的区别是什么？ Typescript 是 JavaScript 的超集，可以被编译成 JavaScript 代码。 用 JavaScript 编写的合法代码，在 TypeScript 中依然有效。Typescript 是纯面向对象的编程语言，包含类和接口的概念。 程序员可以用它来编写面向对象的服务端或客户端程序，并将它们编译成 JavaScript 代码。\\"}"]]},"headers":[{"level":3,"title":"1.什么是TypeScript？","slug":"_1-什么是typescript","link":"#_1-什么是typescript","children":[]},{"level":3,"title":"2.TypeScript 和 JavaScript 的区别是什么？","slug":"_2-typescript-和-javascript-的区别是什么","link":"#_2-typescript-和-javascript-的区别是什么","children":[]},{"level":3,"title":"3.为什么要用 TypeScript ？","slug":"_3-为什么要用-typescript","link":"#_3-为什么要用-typescript","children":[]},{"level":3,"title":"4.TypeScript 和 JavaScript 哪个更好？","slug":"_4-typescript-和-javascript-哪个更好","link":"#_4-typescript-和-javascript-哪个更好","children":[]},{"level":3,"title":"5.什么是泛型？","slug":"_5-什么是泛型","link":"#_5-什么是泛型","children":[]},{"level":3,"title":"6.TS中的类","slug":"_6-ts中的类","link":"#_6-ts中的类","children":[]},{"level":3,"title":"7.什么是构造函数，构造函数作用是什么？","slug":"_7-什么是构造函数-构造函数作用是什么","link":"#_7-什么是构造函数-构造函数作用是什么","children":[]},{"level":3,"title":"8.实例化是什么？","slug":"_8-实例化是什么","link":"#_8-实例化是什么","children":[]},{"level":3,"title":"9.方法重写是什么？","slug":"_9-方法重写是什么","link":"#_9-方法重写是什么","children":[]},{"level":3,"title":"10.什么是可索引类型接口？","slug":"_10-什么是可索引类型接口","link":"#_10-什么是可索引类型接口","children":[]},{"level":3,"title":"11.什么是函数类型接口？","slug":"_11-什么是函数类型接口","link":"#_11-什么是函数类型接口","children":[]},{"level":3,"title":"12.什么是类类型接口？","slug":"_12-什么是类类型接口","link":"#_12-什么是类类型接口","children":[]},{"level":3,"title":"13.什么是混合类型接口？","slug":"_13-什么是混合类型接口","link":"#_13-什么是混合类型接口","children":[]},{"level":3,"title":"14.never 和 void 的区别？","slug":"_14-never-和-void-的区别","link":"#_14-never-和-void-的区别","children":[]},{"level":3,"title":"15.TS的学前基础？","slug":"_15-ts的学前基础","link":"#_15-ts的学前基础","children":[]}],"git":{"createdTime":1729588349000,"updatedTime":1729588349000,"contributors":[{"name":"lnitia","email":"1776568708@qq.com","commits":1}]},"readingTime":{"minutes":6.16,"words":1848},"filePathRelative":"mymd/mianshi/mianshibaodian/05TypeScript.md","localizedDate":"2024年3月10日","excerpt":"<h1> TypeScript</h1>\\n<h3> 1.什么是TypeScript？</h3>\\n<p>TypeScript是JavaScript的加强版，它给JavaScript添加了可选的静态类型和基于类的面向对象编程，它拓展了JavaScript的语法。</p>\\n<p>而且TypeScript不存在跟浏览器不兼容的问题，因为在编译时，它产生的都是JavaScript代码。</p>\\n<h3> 2.TypeScript 和 JavaScript 的区别是什么？</h3>\\n<p>Typescript 是 JavaScript 的超集，可以被编译成 JavaScript 代码。 用 JavaScript 编写的合法代码，在 TypeScript 中依然有效。Typescript 是纯面向对象的编程语言，包含类和接口的概念。 程序员可以用它来编写面向对象的服务端或客户端程序，并将它们编译成 JavaScript 代码。</p>","autoDesc":true}`);export{t as data};
