import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o,c,a,b as i,d as e,f as n}from"./app-0SoiKzJB.js";const d={},r=n(`<h1 id="css基础" tabindex="-1"><a class="header-anchor" href="#css基础" aria-hidden="true">#</a> CSS基础</h1><h2 id="_1-css简介" tabindex="-1"><a class="header-anchor" href="#_1-css简介" aria-hidden="true">#</a> 1 CSS简介</h2><ol><li>主要使用场景：优化网页页面</li><li>css层叠样式表，标记语言</li><li>主要用于设置HTML的文本内容、图片外型、网页布局</li></ol><h2 id="_2-语法规范" tabindex="-1"><a class="header-anchor" href="#_2-语法规范" aria-hidden="true">#</a> 2 语法规范</h2><ol><li>规则由选择器和一条或多条声明构成</li><li>选择器用于指定CSS样式的HTML标签，花括号是对该对象设置的具体样式</li><li>属性和属性值以“键值对”的形式出现</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
        <span class="token selector">h4</span> <span class="token punctuation">{</span>
            <span class="token property">color</span><span class="token punctuation">:</span> cornflowerblue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>你喜欢的食物<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-代码风格" tabindex="-1"><a class="header-anchor" href="#_3-代码风格" aria-hidden="true">#</a> 3 代码风格</h2><h3 id="_3-1-样式格式" tabindex="-1"><a class="header-anchor" href="#_3-1-样式格式" aria-hidden="true">#</a> 3.1 样式格式</h3><ol><li>紧凑格式</li><li>展开格式：一行只写一个属性</li></ol><h3 id="_3-2-样式大小写" tabindex="-1"><a class="header-anchor" href="#_3-2-样式大小写" aria-hidden="true">#</a> 3.2 样式大小写</h3><p>一般使用小写</p><h3 id="_3-3-空格规范" tabindex="-1"><a class="header-anchor" href="#_3-3-空格规范" aria-hidden="true">#</a> 3.3 空格规范</h3><ol><li>属性值前，冒号后面写一个空格</li><li>选择器和大括号前写一个空格</li></ol><h2 id="_4-选择器" tabindex="-1"><a class="header-anchor" href="#_4-选择器" aria-hidden="true">#</a> 4 选择器</h2><h3 id="_4-1-基础选择器" tabindex="-1"><a class="header-anchor" href="#_4-1-基础选择器" aria-hidden="true">#</a> 4.1 基础选择器</h3><h4 id="_4-1-1-标签选择器" tabindex="-1"><a class="header-anchor" href="#_4-1-1-标签选择器" aria-hidden="true">#</a> 4.1.1 标签选择器</h4><ol><li>HTML标签名作为选择器</li><li>会对所有该标签下的内容进行设定</li></ol><h4 id="_4-1-2-类选择器" tabindex="-1"><a class="header-anchor" href="#_4-1-2-类选择器" aria-hidden="true">#</a> 4.1.2 类选择器</h4><ol><li>语法标准</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">.red</span> <span class="token punctuation">{</span>
        color = red；
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>“red”</span><span class="token punctuation">&gt;</span></span>想要变红色的文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>用class属性进行选择</li><li>可以选择一个或者某几个标签</li><li>不能用标签的名字选为类名</li><li>长类名用-连接</li><li>一个标签可以使用多个类名，多个类名之间用空格隔开</li></ol><h4 id="_4-1-3-id选择器" tabindex="-1"><a class="header-anchor" href="#_4-1-3-id选择器" aria-hidden="true">#</a> 4.1.3 id选择器</h4><ol><li>通过#定义id，以id属性选择</li><li>语法标准</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">#red</span> <span class="token punctuation">{</span>
        color = red；
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>“red”</span><span class="token punctuation">&gt;</span></span>想要变红色的文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>只能调用一次，具有唯一性</li></ol><h4 id="_4-1-4-通配符选择器" tabindex="-1"><a class="header-anchor" href="#_4-1-4-通配符选择器" aria-hidden="true">#</a> 4.1.4 通配符选择器</h4><ol><li>用*，表示选取页面所有标签</li><li>语法标准</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">*</span> <span class="token punctuation">{</span>
        color = red；
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>想要变红色的文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>通配符选择器不需要调用</li></ol><h3 id="_4-2-复合选择器" tabindex="-1"><a class="header-anchor" href="#_4-2-复合选择器" aria-hidden="true">#</a> 4.2 复合选择器</h3><p>把基础选择器进行组合形成的 <img src="https://i.loli.net/2020/11/30/ADSCtpy9XRWmGuv.jpg" alt="复合选择器总结.jpg" loading="lazy"></p><h4 id="_4-2-1-后代选择器" tabindex="-1"><a class="header-anchor" href="#_4-2-1-后代选择器" aria-hidden="true">#</a> 4.2.1 后代选择器</h4>`,32),p=a("ol",null,[a("li",null,"又叫包含选择器，只能选择后代"),a("li",{样式说明:""},"语法：父类 后代"),a("li",null,"后代和父类用空格分开"),a("li",null,"最终选择的是子类"),a("li",null,"后代可以是子类也可以是子类的子类"),a("li",null,"两个都可以是任意的基础选择器")],-1),u=n(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">ul.nav li a</span> <span class="token punctuation">{</span>
        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-2-子选择器" tabindex="-1"><a class="header-anchor" href="#_4-2-2-子选择器" aria-hidden="true">#</a> 4.2.2 子选择器</h4>`,2),h=a("ol",null,[a("li",null,"又称子元素选择器，只能选择某元素最近一级子代"),a("li",{样式说明:""},"语法：父类>子类")],-1),k=n(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">ul.nav&gt;a</span> <span class="token punctuation">{</span>
        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-3-并集选择器" tabindex="-1"><a class="header-anchor" href="#_4-2-3-并集选择器" aria-hidden="true">#</a> 4.2.3 并集选择器</h4><ol><li>选择多组标签，同时定义相同的样式，用于集体声明</li><li>语法：用逗号分隔</li><li>任何形式的选择器都可以作为并集选择器的一部分</li></ol><h4 id="_4-2-4-伪类选择器" tabindex="-1"><a class="header-anchor" href="#_4-2-4-伪类选择器" aria-hidden="true">#</a> 4.2.4 伪类选择器</h4><ol><li>像某些标签添加特殊效果：比如给连接添加特殊效果</li><li>语法：用冒号表示</li></ol><h5 id="链接伪类" tabindex="-1"><a class="header-anchor" href="#链接伪类" aria-hidden="true">#</a> 链接伪类</h5><ol><li><code>a:link</code> 选择所有未访问的连接</li><li><code>a:visited</code> 选择所有已访问的连接</li><li><code>a:hover</code> 选择鼠标指针位于其上的连接</li><li><code>a:active</code> 选择活动连接（鼠标按下未弹起的连接）</li><li>为了确保能够生效，必须使用LVHA的顺序写</li><li>浏览器中a有固定样式，要改变必须用a来设定</li></ol><h5 id="focus伪类选择" tabindex="-1"><a class="header-anchor" href="#focus伪类选择" aria-hidden="true">#</a> ：focus伪类选择</h5><ol><li>用于获取光标所在的表单元素</li><li>语法 <code>input:focus{样式说明}</code></li></ol><h2 id="_5-字体属性" tabindex="-1"><a class="header-anchor" href="#_5-字体属性" aria-hidden="true">#</a> 5 字体属性</h2><h3 id="_5-1-字体系列" tabindex="-1"><a class="header-anchor" href="#_5-1-字体系列" aria-hidden="true">#</a> 5.1 字体系列</h3><ol><li>语法标准</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">div</span> <span class="token punctuation">{</span>
        <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&quot;Microsoft Yahei&quot;</span>；
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>想要变微软雅黑的文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>多个字体之间用空格隔开</li><li>一个字体有空格时，最好用“”框起来</li><li>多个字体的作用是前面的字体找不到的时候寻找下一个字体</li></ol><h3 id="_5-2-字体大小" tabindex="-1"><a class="header-anchor" href="#_5-2-字体大小" aria-hidden="true">#</a> 5.2 字体大小</h3><ol><li><code>{font-size: 20px}</code></li><li>标题标签比较特殊，需要单独指定文字大小</li></ol><h3 id="_5-3-字体粗细" tabindex="-1"><a class="header-anchor" href="#_5-3-字体粗细" aria-hidden="true">#</a> 5.3 字体粗细</h3><ol><li><code>{font-weight :normal/400}</code></li><li>正常=normal=400</li><li>加粗=bold=700</li><li>数字在100-900里选</li></ol><h3 id="_5-4-文字样式" tabindex="-1"><a class="header-anchor" href="#_5-4-文字样式" aria-hidden="true">#</a> 5.4 文字样式</h3><ol><li><code>{font-style: italic}</code></li><li>italic: 倾斜</li><li>normal：正常</li></ol><h3 id="_5-5-字体复合属性" tabindex="-1"><a class="header-anchor" href="#_5-5-字体复合属性" aria-hidden="true">#</a> 5.5 字体复合属性</h3><ol><li><code>{font: font-style font-weight font-size/line-height font-family}</code></li><li>顺序有要求，不需要的属性可以省略，但是必须保留font-size和font-family <img src="https://i.loli.net/2020/11/27/EoWxsXwkpaSRbJm.png" alt="字体属性总结.png" loading="lazy"></li></ol><h2 id="_6-文本属性" tabindex="-1"><a class="header-anchor" href="#_6-文本属性" aria-hidden="true">#</a> 6 文本属性</h2><p>定义文本的外观，比如文本的颜色、对齐文本、装饰文本、文本缩进、行间距等</p><h3 id="_6-1-文本颜色" tabindex="-1"><a class="header-anchor" href="#_6-1-文本颜色" aria-hidden="true">#</a> 6.1 文本颜色</h3><ol><li>语法</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>属性内容 <ul><li>预设值（red）</li><li>16进制数：#+6个数字</li><li>rgba值</li></ul></li></ol><h3 id="_6-2-对齐文本" tabindex="-1"><a class="header-anchor" href="#_6-2-对齐文本" aria-hidden="true">#</a> 6.2 对齐文本</h3><ol><li>text-align属性用于设置元素内文本内容的水平对齐方式</li><li>语法</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-装饰文本" tabindex="-1"><a class="header-anchor" href="#_6-3-装饰文本" aria-hidden="true">#</a> 6.3 装饰文本</h3><ol><li>text-decoration属性规定添加到文本的修饰，可以给文本添加下划线、删除线、上划线等</li><li>语法</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>属性内容 <ul><li>none：默认，没有装饰线</li><li>underline：下划线</li><li>overline：上划线</li><li>line-through：删除线</li></ul></li></ol><h3 id="_6-4-文本缩进" tabindex="-1"><a class="header-anchor" href="#_6-4-文本缩进" aria-hidden="true">#</a> 6.4 文本缩进</h3><ol><li>text-indent属性用来指定文本首行缩进</li><li>语法</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">text-indent</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>em是一个相对尺寸，当前元素一个文字大小的距离</li></ol><h3 id="_6-5-行间距" tabindex="-1"><a class="header-anchor" href="#_6-5-行间距" aria-hidden="true">#</a> 6.5 行间距</h3><ol><li>line-height属性用于设置行高</li><li>语法</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
    <span class="token property">line-height</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>行高=上间距+文本高度+下间距</li></ol><p><img src="https://i.loli.net/2020/11/29/VvieGfpDOP4wEAt.jpg" alt="文本属性总结.jpg" loading="lazy"></p><h2 id="_7-引入方式" tabindex="-1"><a class="header-anchor" href="#_7-引入方式" aria-hidden="true">#</a> 7 引入方式</h2><h3 id="_7-1-行内样式表-行内式" tabindex="-1"><a class="header-anchor" href="#_7-1-行内样式表-行内式" aria-hidden="true">#</a> 7.1 行内样式表（行内式）</h3><ol><li>在标签内部写上style属性</li><li>语法 <code>&lt;div style=&quot;color: red&quot;&gt;&lt;/div&gt;</code></li><li>一定要是双引号，写法要符合CSS</li></ol><h3 id="_7-2-内部样式表-嵌入式" tabindex="-1"><a class="header-anchor" href="#_7-2-内部样式表-嵌入式" aria-hidden="true">#</a> 7.2 内部样式表（嵌入式）</h3><ol><li>css写入html内部，写在&lt; style&gt;标签里</li><li>理论上&lt; style&gt;可以放在任何地方，但一般放在head里</li><li>可以控制整个页面</li><li>代码结构清晰，但并没有完全分离</li></ol><h3 id="_7-3-外部样式表" tabindex="-1"><a class="header-anchor" href="#_7-3-外部样式表" aria-hidden="true">#</a> 7.3 外部样式表</h3><ol><li>样式单独写到CSS文件中，HTML引用CSS文件</li><li>在HTML页面中，使用link标签引入</li><li>语法 <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;css文件路径&quot;&gt;</code></li></ol><h2 id="_8-emmet语法" tabindex="-1"><a class="header-anchor" href="#_8-emmet语法" aria-hidden="true">#</a> 8 Emmet语法</h2><h3 id="_8-1-快速生成css" tabindex="-1"><a class="header-anchor" href="#_8-1-快速生成css" aria-hidden="true">#</a> 8.1 快速生成CSS</h3><ol><li>简写+tab</li></ol><h3 id="_8-2-快速格式化代码" tabindex="-1"><a class="header-anchor" href="#_8-2-快速格式化代码" aria-hidden="true">#</a> 8.2 快速格式化代码</h3><ol><li>shift+alt+f</li></ol><h2 id="_9-元素显示模式" tabindex="-1"><a class="header-anchor" href="#_9-元素显示模式" aria-hidden="true">#</a> 9 元素显示模式</h2><ol><li>元素显示模式：标签以什么方式显示 <img src="https://i.loli.net/2020/11/30/FujXR23vVxbSi9p.jpg" alt="元素显示模式总结.jpg" loading="lazy"></li></ol><h3 id="_9-1-块元素" tabindex="-1"><a class="header-anchor" href="#_9-1-块元素" aria-hidden="true">#</a> 9.1 块元素</h3><ol><li>典型块元素：&lt; div&gt; &lt; h1&gt;</li><li>独占一行</li><li>宽度、高度、内外边距都可以控制</li><li>宽度默认是父级的100%</li><li>是一个容器及盒子，里面可以放行内元素或者块级元素</li><li>文字类元素内不能使用块元素</li></ol><h3 id="_9-1-1-行内元素" tabindex="-1"><a class="header-anchor" href="#_9-1-1-行内元素" aria-hidden="true">#</a> 9.1.1 行内元素</h3><ol><li>典型行内元素：&lt; a&gt; &lt; span&gt;</li><li>相邻行内元素在一行上，一行显示多个</li><li>宽高设置是无效的</li><li>宽度默认是本身内容的宽度</li><li>行内元素不能放块元素</li><li>链接里不能再放链接</li><li>链接可以放块元素</li></ol><h3 id="_9-1-2-行内块元素" tabindex="-1"><a class="header-anchor" href="#_9-1-2-行内块元素" aria-hidden="true">#</a> 9.1.2 行内块元素</h3><ol><li>特殊标签： &lt; img/&gt; &lt; input/&gt; &lt; td&gt;</li><li>相邻行内块元素在一行上，之间会有空白间隙，一行可以显示多个</li><li>默认宽度是本身内容的宽度</li><li>宽度、高度、内外边距都可以控制</li></ol><h3 id="_9-1-3-元素显示模式的转换" tabindex="-1"><a class="header-anchor" href="#_9-1-3-元素显示模式的转换" aria-hidden="true">#</a> 9.1.3 元素显示模式的转换</h3><ol><li>转换成块元素 <code>display:block;</code></li><li>转换成行内元素 <code>display:inline;</code></li><li>转换成行内块元素 <code>display:inline-block;</code></li></ol><h2 id="_10-背景" tabindex="-1"><a class="header-anchor" href="#_10-背景" aria-hidden="true">#</a> 10 背景</h2><p>通过CSS背景属性，可以给页面元素添加背景样式 <img src="https://i.loli.net/2020/12/08/oHEUbfjnd18iMYy.jpg" alt="背景总结.jpg" loading="lazy"></p><h3 id="_10-1-背景颜色" tabindex="-1"><a class="header-anchor" href="#_10-1-背景颜色" aria-hidden="true">#</a> 10.1 背景颜色</h3><ol><li>语法 <code>background-color: 颜色值;</code></li><li>默认值：transparent（透明）</li></ol><h3 id="_10-2-背景颜色线性渐变" tabindex="-1"><a class="header-anchor" href="#_10-2-背景颜色线性渐变" aria-hidden="true">#</a> 10.2 背景颜色线性渐变</h3><ol><li>CSS3新增属性</li><li>语法 <code>background: -浏览器私有前缀-linear-gradient(起始方向,颜色1,颜色2,....)</code></li><li>必须添加浏览器私有前缀</li></ol><h3 id="_10-3-背景图片" tabindex="-1"><a class="header-anchor" href="#_10-3-背景图片" aria-hidden="true">#</a> 10.3 背景图片</h3><ol><li>实际开发常见于logo或者一些装饰性的小图片或者超大的背景图片</li><li>优点是非常便于控制位置</li><li>语法 <code>background-image : none/url();</code></li></ol><h3 id="_10-4-背景平铺" tabindex="-1"><a class="header-anchor" href="#_10-4-背景平铺" aria-hidden="true">#</a> 10.4 背景平铺</h3><ol><li>语法 <code>background-repeat: repeat/no-repeat/repeat-x/repeat-y;</code></li><li>默认情况是repeat</li><li>背景颜色和背景图片可以同时添加，背景颜色位于最下层</li></ol><h3 id="_10-5-背景图片位置" tabindex="-1"><a class="header-anchor" href="#_10-5-背景图片位置" aria-hidden="true">#</a> 10.5 背景图片位置</h3><ol><li>语法 <code>background-position: x y;</code></li><li>x,y都可以使用方位名词和精确单位</li><li>方位名词 <ul><li>top</li><li>center</li><li>bottom</li><li>left</li><li>right</li></ul></li><li>两者都是方位名词，两个名词的顺序无关</li><li>只指定一个方位名词，另一个默认为center</li><li>精确单位第一个是x坐标，第二个是y坐标，顺序不能替换</li><li>如果只指定一个精确单位，一定是x，垂直默认居中</li><li>参数可以是混合单位。第一个是x坐标，第二个是y坐标，顺序不能替换</li></ol><h3 id="_10-6-背景附着" tabindex="-1"><a class="header-anchor" href="#_10-6-背景附着" aria-hidden="true">#</a> 10.6 背景附着</h3><ol><li>设置背景图片是固定还是随着页面其余部分滚动</li><li>语法 <code>background-attachment: scroll/fixed;</code></li></ol><h3 id="_10-7-背景复合写法" tabindex="-1"><a class="header-anchor" href="#_10-7-背景复合写法" aria-hidden="true">#</a> 10.7 背景复合写法</h3><ol><li>约定顺序：颜色+地址+平铺+滚动+位置</li><li>语法 <code>background: transparent url() repeat fixed top;</code></li></ol><h3 id="_10-8-背景色半透明" tabindex="-1"><a class="header-anchor" href="#_10-8-背景色半透明" aria-hidden="true">#</a> 10.8 背景色半透明</h3><ol><li>语法 <code>background: rgba(0,0,0,0.3)</code></li><li>alpha透明度，0-1之间</li><li>习惯性把0.3中的0去掉</li><li>只是设置背景色半透明，对盒子里的内容没有影响</li></ol><h2 id="_11-css三大特性" tabindex="-1"><a class="header-anchor" href="#_11-css三大特性" aria-hidden="true">#</a> 11 CSS三大特性</h2><h3 id="_11-1-层叠性" tabindex="-1"><a class="header-anchor" href="#_11-1-层叠性" aria-hidden="true">#</a> 11.1 层叠性</h3><ol><li>相同选择器设置相同的样式，后面的会覆盖前面的</li><li>冲突，后者覆盖</li><li>不冲突，不层叠</li></ol><h3 id="_11-2-继承性" tabindex="-1"><a class="header-anchor" href="#_11-2-继承性" aria-hidden="true">#</a> 11.2 继承性</h3><ol><li>子标签会集成父标签里的样式</li><li>子元素可以集成父元素的样式（text-,font-,line-以及color属性）</li></ol><h3 id="_11-3-优先级" tabindex="-1"><a class="header-anchor" href="#_11-3-优先级" aria-hidden="true">#</a> 11.3 优先级</h3><ol><li>选择器相同，则执行层叠性</li><li>选择器不同，按权重大小 <img src="https://i.loli.net/2020/12/08/2D6LouejckKPaGz.jpg" alt="选择器权重一览.jpg" loading="lazy"></li><li>权重是4组数字组成，不会进位</li><li>复合选择器需要权重叠加</li></ol><h2 id="_12-盒子模型" tabindex="-1"><a class="header-anchor" href="#_12-盒子模型" aria-hidden="true">#</a> 12 盒子模型</h2><h3 id="_12-1-border边框" tabindex="-1"><a class="header-anchor" href="#_12-1-border边框" aria-hidden="true">#</a> 12.1 border边框</h3><ol><li>由边框宽度、边框样式、边框颜色组成</li><li><code>border : border-width // border-style // border-color</code></li><li>边框样式 <ul><li>solid：实线边框</li><li>dashed：虚线边框</li><li>dotted：点线边框</li></ul></li><li>边框复合写法 <code>border: 1px solid red;</code>没有编写顺序要求</li><li>边框分开编辑 <code>border-top</code>编辑上边框</li><li>表格边框合并 <code>border-collapse:collapse;</code> 相邻表格边框合并在一起 只对table相关</li><li>边框会影响盒子实际大小 盒子的实际大小 = 盒子高/宽 + 2*边框宽度 + padding</li></ol><h3 id="_12-1-1-content内容" tabindex="-1"><a class="header-anchor" href="#_12-1-1-content内容" aria-hidden="true">#</a> 12.1.1 content内容</h3><p>装文字、图片、盒子</p><h3 id="_12-1-2-padding内边距" tabindex="-1"><a class="header-anchor" href="#_12-1-2-padding内边距" aria-hidden="true">#</a> 12.1.2 padding内边距</h3><ol><li>设置盒子边框和内容之间的距离</li><li><code>padding-top // padding-bottom // padding-left // padding-right</code></li><li>内边距复合写法 <img src="https://i.loli.net/2020/12/09/OFIypx8LNCKAouR.jpg" alt="内边距复合写法规律.jpg" loading="lazy"></li><li>内边距会影响盒子实际大小 盒子的实际大小 = 盒子高/宽 + 2*边框宽度 + 各部分padding</li><li>如果盒子没有指定宽度，是继承的父级的宽度，加padding值的时候不会撑大盒子</li></ol><h3 id="_12-1-3-margin外边距" tabindex="-1"><a class="header-anchor" href="#_12-1-3-margin外边距" aria-hidden="true">#</a> 12.1.3 margin外边距</h3><ol><li>设置盒子之间的距离</li><li><code>margin-top // margin-bottom // margin-left // margin-right</code></li><li>外边距复合写法 与内边距一致</li><li>块级盒子水平居中:盒子设置宽度，左右外边距设置为auto <code>margin: 0 auto</code></li><li>行内元素、行内块元素居中：给父级添加 <code>text-align: center;</code></li><li>嵌套关系中父子元素中的父元素会取两者最大外边距，解决方法： <ul><li>父元素定义上边框</li><li>父元素定义上内边距</li><li>父元素添加 <code>overflow: hidden;</code></li></ul></li><li>浏览器中会设置初始内外边距建议清除</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_12-1-4-圆角边框" tabindex="-1"><a class="header-anchor" href="#_12-1-4-圆角边框" aria-hidden="true">#</a> 12.1.4 圆角边框</h3><ol><li>语法 <code>border-radius: 圆角半径;</code></li><li>参数可以用精确数和百分比</li><li>参数可以写四个，从左上角顺时针旋转</li><li>可以指定特定角 <code>border-top-left-radius: 圆角半径</code></li></ol><h3 id="_12-1-5-盒子阴影" tabindex="-1"><a class="header-anchor" href="#_12-1-5-盒子阴影" aria-hidden="true">#</a> 12.1.5 盒子阴影</h3><ol><li>语法格式 <code>box-shadow: h-shadow v-shadow blur spread color inset</code></li><li>参数含义 <img src="https://i.loli.net/2020/12/12/21DkEKJ5fuzeYsh.jpg" alt="参数含义.jpg" loading="lazy"></li><li>只要前两个参数是必须写的</li><li>影子不占空间</li></ol><h2 id="_13-浮动" tabindex="-1"><a class="header-anchor" href="#_13-浮动" aria-hidden="true">#</a> 13 浮动</h2><ol><li>浮动可以改变标签默认的排列方式</li><li>多个块级元素横向排列用浮动</li></ol><h3 id="_13-1-浮动语法" tabindex="-1"><a class="header-anchor" href="#_13-1-浮动语法" aria-hidden="true">#</a> 13.1 浮动语法</h3><p><code>选择器 { float: none|left|right;}</code></p><h3 id="_13-2-浮动特性" tabindex="-1"><a class="header-anchor" href="#_13-2-浮动特性" aria-hidden="true">#</a> 13.2 浮动特性</h3><ol><li>脱标 <ul><li>浮动的元素在标准流中不占据位置</li><li>浮动元素和标准流的元素不在一个图层上</li></ul></li><li>一行显示并且顶部对齐 <ul><li>浮动的元素互相贴在一起，不会有缝隙</li><li>父级宽度装不下时，另起一行对齐</li></ul></li><li>具有行内块元素的特性</li></ol><h3 id="_13-3-浮动布局注意点" tabindex="-1"><a class="header-anchor" href="#_13-3-浮动布局注意点" aria-hidden="true">#</a> 13.3 浮动布局注意点</h3><ol><li>浮动和标准流的父元素一起使用</li><li>一个元素浮动了，理论上兄弟元素也都应该浮动</li><li>浮动的盒子只会影响浮动盒子后面的标准流，不会影响前面的标准流</li></ol><h3 id="_13-4-清除浮动" tabindex="-1"><a class="header-anchor" href="#_13-4-清除浮动" aria-hidden="true">#</a> 13.4 清除浮动</h3><ol><li><p>父盒子无法设置高度的时候需要清除浮动</p></li><li><p>语法 <code>选择器 {clear: left|right|both}</code></p></li><li><p>清除浮动的方法</p><ul><li>额外标签法：在最后一个浮动元素后写一个空标签，设置清除浮动 新标签必须是块级元素</li><li>父元素添加overflow：属性设置hidden|auto|scroll 无法显示溢出的部分</li><li>:after伪元素法：</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.clearfix:after</span> <span class="token punctuation">{</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
    <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>双微元素清除浮动</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.clearfix:before,.clearfix:after</span> <span class="token punctuation">{</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.clearfix:after</span> <span class="token punctuation">{</span>
    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.clearfix</span> <span class="token punctuation">{</span>
    *<span class="token property">zoom</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_14-书写顺序" tabindex="-1"><a class="header-anchor" href="#_14-书写顺序" aria-hidden="true">#</a> 14 书写顺序</h2><ol><li>布局定位属性：display|position|float|clear|visibility|overflow</li><li>自身属性：width|height|margin|padding|border|background</li><li>文本属性：color|font|text-decoration|text-align|vertical-align|white-space|break-word</li><li>其他属性（CSS3）：content|cursor|border-radius|box-shadow|background</li></ol><h2 id="_15-定位" tabindex="-1"><a class="header-anchor" href="#_15-定位" aria-hidden="true">#</a> 15 定位</h2><h3 id="_15-1-定位组成" tabindex="-1"><a class="header-anchor" href="#_15-1-定位组成" aria-hidden="true">#</a> 15.1 定位组成</h3><ol><li>定位：将盒子定在某一个位置，所以定位也是在摆放盒子，按照定位的方式移动盒子</li><li>定位 = 定位模式 + 边偏移</li><li>定位模式：用于指定一个元素在文档中的定位方式</li><li>边偏移：决定该元素的最终位置</li></ol><h3 id="_15-2-定位模式" tabindex="-1"><a class="header-anchor" href="#_15-2-定位模式" aria-hidden="true">#</a> 15.2 定位模式</h3><p>通过CSS的position属性来设置</p><h4 id="_15-2-1-static静态定位" tabindex="-1"><a class="header-anchor" href="#_15-2-1-static静态定位" aria-hidden="true">#</a> 15.2.1 static静态定位</h4><p><em>仅作了解</em></p><ol><li>默认定位方式，无定位的意思</li><li>静态定位按照标准流摆放位置，没有边偏移</li></ol><h4 id="_15-2-2-relative相对定位" tabindex="-1"><a class="header-anchor" href="#_15-2-2-relative相对定位" aria-hidden="true">#</a> 15.2.2 relative相对定位</h4><ol><li>相对定位是元素在移动位置的时候，是相对于它原来的位置来说的</li><li>语法 <code>选择器 { position: relative;}</code></li><li>原来在标准流的位置继续占有，后面的盒子仍然以标准流的方式对待</li><li>不脱标，继续保持原来位置</li><li>主要的作用是限制绝对定位</li></ol><h4 id="_15-2-3-absolute绝对定位" tabindex="-1"><a class="header-anchor" href="#_15-2-3-absolute绝对定位" aria-hidden="true">#</a> 15.2.3 absolute绝对定位</h4><p><em>重要</em></p><ol><li>绝对定位是元素在移动位置的时候，是相对于它祖先元素来说的</li><li>语法 <code>选择器 { position: absolute;}</code></li><li>如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位</li><li>如果祖先有定位，则以最近一级的有定位祖先元素为参考点移动位置</li><li>绝对定位不再占有原来的位置，脱离标准流</li></ol><h4 id="_15-2-4-fixed固定定位" tabindex="-1"><a class="header-anchor" href="#_15-2-4-fixed固定定位" aria-hidden="true">#</a> 15.2.4 fixed固定定位</h4><p><em>重要</em></p><ol><li>元素固定到浏览器可视区的某个位置</li><li>语法 <code>选择器 { position: fixed;}</code></li><li>以浏览器的可视窗口为参照点移动，与父级和滚动条没有关系</li><li>固定定位不占有原先的位置</li><li>技巧：固定在版心右侧位置 <code>选择器 { position: fixed;left:50%;margin-left:版心宽度的一半}</code></li></ol><h4 id="_15-2-5-sticky粘性定位" tabindex="-1"><a class="header-anchor" href="#_15-2-5-sticky粘性定位" aria-hidden="true">#</a> 15.2.5 sticky粘性定位</h4><p><em>仅作了解</em></p><ol><li>某些情况是固定定位，某些情况是相对定位</li><li>语法 <code>选择器 { position: sticky;}</code></li><li>以浏览器可视窗口为参照点移动元素</li><li>占有原先的位置</li><li>必须添加边偏移中的一个，否则则为相对定位</li></ol><h3 id="_15-3-边偏移" tabindex="-1"><a class="header-anchor" href="#_15-3-边偏移" aria-hidden="true">#</a> 15.3 边偏移</h3><p>边偏移就是定位盒子移动到最终位置</p><ol><li>top：顶端偏移量</li><li>bottom：底部偏移量</li><li>left：左侧偏移量</li><li>right：右侧偏移量</li></ol><h3 id="_15-4-子绝父相" tabindex="-1"><a class="header-anchor" href="#_15-4-子绝父相" aria-hidden="true">#</a> 15.4 子绝父相</h3><ol><li>子级使用绝对定位，父级则需要使用相对定位</li><li>子级使用绝对定位，可以放在父级任何地方，不会影响兄弟</li><li>父级需要加定位限制子级位置，且需要占有位置</li></ol><h3 id="_15-5-定位叠放次序" tabindex="-1"><a class="header-anchor" href="#_15-5-定位叠放次序" aria-hidden="true">#</a> 15.5 定位叠放次序</h3><ol><li>语法 <code>选择器 { z-index: 1;}</code></li><li>数值可以是正整数、负整数或者0，默认auto，数值越大，盒子越靠上</li><li>如果数值相同，按照书写顺序，后来者居上</li><li>数字后面不能加单位</li><li>只有定位的盒子才有z-size属性</li></ol><h3 id="_15-6-定位的扩展" tabindex="-1"><a class="header-anchor" href="#_15-6-定位的扩展" aria-hidden="true">#</a> 15.6 定位的扩展</h3><ol><li>绝对定位的盒子居中 <code>选择器 { position: absolute;left:50%;margin-left:-盒子宽度的一半}</code> <code>选择器 { position: absolute;top:50%;margin-top:-盒子高度度的一半}</code></li><li>定位特殊特性 <ul><li>行内元素添加绝对或者固定定位，可以直接设置高度和宽度</li><li>块级元素添加绝对或者固定定位，默认是内容大小</li><li>脱标的盒子不会除法外边距塌陷</li></ul></li><li>绝对定位会完全压住盒子 <ul><li>浮动会压住标准流盒子，但不会压住标准流的文字</li><li>绝对或者固定定位会压住标准流的文字</li></ul></li></ol><h2 id="_16-元素的显示与隐藏" tabindex="-1"><a class="header-anchor" href="#_16-元素的显示与隐藏" aria-hidden="true">#</a> 16 元素的显示与隐藏</h2><h3 id="_16-1-display" tabindex="-1"><a class="header-anchor" href="#_16-1-display" aria-hidden="true">#</a> 16.1 display</h3><ol><li>display属性用于设置一个元素如何显示</li><li><code>display:none;</code>隐藏对象，隐藏后元素不占有原先的位置</li><li><code>display:block;</code>显示对象；转换为块级元素</li><li>搭配JS可以做很多网页特效</li></ol><h3 id="_16-2-visibility" tabindex="-1"><a class="header-anchor" href="#_16-2-visibility" aria-hidden="true">#</a> 16.2 visibility</h3><ol><li>visibility属性用于指定一个元素可见还是隐藏</li><li><code>visibility:visible;</code>元素可见</li><li><code>visibility:hidden;</code>元素隐藏，隐藏后元素占有原先的位置</li></ol><h3 id="_16-3-overflow" tabindex="-1"><a class="header-anchor" href="#_16-3-overflow" aria-hidden="true">#</a> 16.3 overflow</h3><ol><li>overflow属性指定了内容溢出的元素框时的状态</li><li><code>overflow:hidden;</code>溢出内容隐藏</li><li><code>overflow:scroll;</code>溢出内容显示滚动条，不溢出的时候也显示滚动条</li><li><code>overflow:auto;</code>需要的时候添加滚动条</li><li>对于定位的盒子要慎用，会切掉框架外的内容</li></ol><h2 id="_17-精灵图" tabindex="-1"><a class="header-anchor" href="#_17-精灵图" aria-hidden="true">#</a> 17 精灵图</h2><ol><li>精灵技术：将网页中的一些小背景图像整合到一张大图中，减少服务器的接受和发送请求的次数</li></ol><h3 id="_17-1-精灵图使用" tabindex="-1"><a class="header-anchor" href="#_17-1-精灵图使用" aria-hidden="true">#</a> 17.1 精灵图使用</h3><ol><li>主要针对背景图片使用，把多个小的背景图片整合到一张大图中</li><li>sprite：精灵图或者雪碧图，集成的大图</li><li>通过移动背景图片的方式选择精灵图中的小图，<code>background-position</code></li><li>往上往左移动为负值</li></ol><h2 id="_18-字体图标" tabindex="-1"><a class="header-anchor" href="#_18-字体图标" aria-hidden="true">#</a> 18 字体图标</h2><ol><li>主要用于显示网页中通用、常用的一些小图标</li><li>展示的是一个图标，但本质是文字</li></ol><h3 id="_18-1-字体图标优点" tabindex="-1"><a class="header-anchor" href="#_18-1-字体图标优点" aria-hidden="true">#</a> 18.1 字体图标优点</h3><ol><li>轻量级：一旦加载了，图标会马上渲染出来，减少服务器请求</li><li>灵活性</li><li>兼容性：支持所有浏览器</li></ol><h3 id="_18-2-字体图标下载" tabindex="-1"><a class="header-anchor" href="#_18-2-字体图标下载" aria-hidden="true">#</a> 18.2 字体图标下载</h3>`,161),v={href:"https://icomoon.io/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.iconfont.cn/",target:"_blank",rel:"noopener noreferrer"},m=n(`<h3 id="_18-3-字体图标引入" tabindex="-1"><a class="header-anchor" href="#_18-3-字体图标引入" aria-hidden="true">#</a> 18.3 字体图标引入</h3><ol><li>把下载包里面的fonts文件夹放在CSS文件的根目录下</li><li>字体声明</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&#39;icomoon&#39;</span><span class="token punctuation">;</span>
  <span class="token property">src</span><span class="token punctuation">:</span>  <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;fonts/icomoon.eot?p4ssmb&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>
  <span class="token property">src</span><span class="token punctuation">:</span>  <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;fonts/icomoon.eot?p4ssmb#iefix&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;embedded-opentype&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;fonts/icomoon.ttf?p4ssmb&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;truetype&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;fonts/icomoon.woff?p4ssmb&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;fonts/icomoon.svg?p4ssmb#icomoon&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;svg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
  <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
  <span class="token property">font-display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_18-4-字体图标追加" tabindex="-1"><a class="header-anchor" href="#_18-4-字体图标追加" aria-hidden="true">#</a> 18.4 字体图标追加</h3><ol><li>把压缩包里的selection.json重新上传，再下载压缩包替代原文件</li></ol><h2 id="_19-css三角" tabindex="-1"><a class="header-anchor" href="#_19-css三角" aria-hidden="true">#</a> 19 CSS三角</h2><h3 id="_19-1-原理" tabindex="-1"><a class="header-anchor" href="#_19-1-原理" aria-hidden="true">#</a> 19.1 原理</h3><ol><li>在宽高都为0的盒子设置border时会产生三角形</li></ol><h3 id="_19-2-代码" tabindex="-1"><a class="header-anchor" href="#_19-2-代码" aria-hidden="true">#</a> 19.2 代码</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 50px solid transparent<span class="token punctuation">;</span>
    <span class="token property">border-left-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_19-3-定位" tabindex="-1"><a class="header-anchor" href="#_19-3-定位" aria-hidden="true">#</a> 19.3 定位</h3><ol><li>子绝父相</li><li>要移动border的两倍</li></ol><h2 id="_20-用户界面样式" tabindex="-1"><a class="header-anchor" href="#_20-用户界面样式" aria-hidden="true">#</a> 20 用户界面样式</h2><ol><li>界面样式：更改用户操作样式</li></ol><h3 id="_20-1-鼠标样式" tabindex="-1"><a class="header-anchor" href="#_20-1-鼠标样式" aria-hidden="true">#</a> 20.1 鼠标样式</h3><ol><li>设置鼠标在对象上时的光标形状</li><li>语法 <code>选择器 {cursor: pointer}</code> <img src="https://i.loli.net/2021/03/06/l8j6G5TQZaEtXWb.jpg" alt="常见鼠标样式.jpg" loading="lazy"></li></ol><h3 id="_20-2-表单轮廓线" tabindex="-1"><a class="header-anchor" href="#_20-2-表单轮廓线" aria-hidden="true">#</a> 20.2 表单轮廓线</h3><ol><li>取消表单轮廓线 <code>outline: none;</code></li></ol><h3 id="_20-3-固定文本域" tabindex="-1"><a class="header-anchor" href="#_20-3-固定文本域" aria-hidden="true">#</a> 20.3 固定文本域</h3><ol start="2"><li>防止拖动文本域 <code>resize: none;</code></li></ol><h2 id="_21-vertical-align" tabindex="-1"><a class="header-anchor" href="#_21-vertical-align" aria-hidden="true">#</a> 21 vertical-align</h2><ol><li>图片和表单的垂直居中</li><li>设置元素的垂直对齐方式，只针对行内元素或者行内块元素有效</li><li>语法 <code>vertical-align : 参数</code></li><li>baseline：默认，元素放置在父元素的基线上</li><li>top：顶线对齐</li><li>middle：中线对齐</li><li>bottom：底线对齐</li></ol><h3 id="_21-1-图片底侧空白间隙" tabindex="-1"><a class="header-anchor" href="#_21-1-图片底侧空白间隙" aria-hidden="true">#</a> 21.1 图片底侧空白间隙</h3><ol><li>vertical-align不选择基线对齐</li><li>把图片转换成块级元素</li></ol><h2 id="_22-溢出文字省略号显示" tabindex="-1"><a class="header-anchor" href="#_22-溢出文字省略号显示" aria-hidden="true">#</a> 22 溢出文字省略号显示</h2><h3 id="_22-1-单行文本溢出" tabindex="-1"><a class="header-anchor" href="#_22-1-单行文本溢出" aria-hidden="true">#</a> 22.1 单行文本溢出</h3><ol><li>强制一行内显示文本 <code>white-space: nowrap;</code></li><li>超出部分隐藏 <code>overflow: hidden;</code></li><li>文字用省略号替代超出的部分 <code>text-overflow: ellipsis;</code></li></ol><h3 id="_22-2-多行文本溢出" tabindex="-1"><a class="header-anchor" href="#_22-2-多行文本溢出" aria-hidden="true">#</a> 22.2 多行文本溢出</h3><ol><li>有比较大兼容性问题，适合webKit浏览器或移动端</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token punctuation">{</span>
    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
    <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>
    <span class="token comment">/* 弹性伸缩盒子模型显示 */</span>
    <span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>
    <span class="token comment">/* 限制在一个块元素显示的文本行数 */</span>
    <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span>2<span class="token punctuation">;</span>
    <span class="token comment">/* 设置或检索伸缩盒对象的子元素排列方式 */</span>
    <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_23-布局技巧" tabindex="-1"><a class="header-anchor" href="#_23-布局技巧" aria-hidden="true">#</a> 23 布局技巧</h2><h3 id="_23-1-margin负值运用" tabindex="-1"><a class="header-anchor" href="#_23-1-margin负值运用" aria-hidden="true">#</a> 23.1 margin负值运用</h3><ol><li>解决盒子边框变粗的问题：向左移动使右边的盒子边框压住左边盒子边框</li><li><code>margin-left: -1px;</code></li><li>在使用这个技巧时，添加hover属性变化，左边的盒子有边框不能展示</li><li>添加相对定位</li><li><code>position: relative;</code></li><li>如果盒子里有定位，则提高盒子的层级</li><li><code>z-index: 1</code></li></ol><h3 id="_23-2-文字围绕浮动元素" tabindex="-1"><a class="header-anchor" href="#_23-2-文字围绕浮动元素" aria-hidden="true">#</a> 23.2 文字围绕浮动元素</h3><ol><li>巧妙应用浮动元素不会压住文字的技巧</li><li>图片添加浮动，文字为标准流</li></ol><h2 id="_24-css初始化" tabindex="-1"><a class="header-anchor" href="#_24-css初始化" aria-hidden="true">#</a> 24 CSS初始化</h2><h3 id="_24-1-标签内外边距清零" tabindex="-1"><a class="header-anchor" href="#_24-1-标签内外边距清零" aria-hidden="true">#</a> 24.1 标签内外边距清零</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24-2-斜体文字不倾斜" tabindex="-1"><a class="header-anchor" href="#_24-2-斜体文字不倾斜" aria-hidden="true">#</a> 24.2 斜体文字不倾斜</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">em,
i</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24-3-去掉列表格式" tabindex="-1"><a class="header-anchor" href="#_24-3-去掉列表格式" aria-hidden="true">#</a> 24.3 去掉列表格式</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">li</span> <span class="token punctuation">{</span>
    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24-4-图片初始化" tabindex="-1"><a class="header-anchor" href="#_24-4-图片初始化" aria-hidden="true">#</a> 24.4 图片初始化</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">img</span> <span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24-5-按钮鼠标样式手" tabindex="-1"><a class="header-anchor" href="#_24-5-按钮鼠标样式手" aria-hidden="true">#</a> 24.5 按钮鼠标样式手</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">button</span> <span class="token punctuation">{</span>
    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24-6-链接初始化" tabindex="-1"><a class="header-anchor" href="#_24-6-链接初始化" aria-hidden="true">#</a> 24.6 链接初始化</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">a</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>
    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">a:hover</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>#c81623
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24-7-主页面初始化" tabindex="-1"><a class="header-anchor" href="#_24-7-主页面初始化" aria-hidden="true">#</a> 24.7 主页面初始化</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">body</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 文字抗锯齿 */</span>
    <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
    <span class="token property">font</span><span class="token punctuation">:</span> 12px/1.5 Microsoft YaHei
    <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24-8-清除浮动" tabindex="-1"><a class="header-anchor" href="#_24-8-清除浮动" aria-hidden="true">#</a> 24.8 清除浮动</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.clearfix:after</span> <span class="token punctuation">{</span>
    <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_25-css3新特性" tabindex="-1"><a class="header-anchor" href="#_25-css3新特性" aria-hidden="true">#</a> 25 CSS3新特性</h2><ol><li>有兼容性问题，ie9+才支持</li><li>移动端支持优于PC端</li></ol><h3 id="_25-1-css3新增选择器" tabindex="-1"><a class="header-anchor" href="#_25-1-css3新增选择器" aria-hidden="true">#</a> 25.1 CSS3新增选择器</h3><h4 id="_25-1-1-属性选择器" tabindex="-1"><a class="header-anchor" href="#_25-1-1-属性选择器" aria-hidden="true">#</a> 25.1.1 属性选择器</h4><ol><li>根据元素特定的属性选择元素 <img src="https://i.loli.net/2021/03/15/hxsZJpR3SmcyNr8.jpg" alt="属性选择器.jpg" loading="lazy"></li><li>语法 <code>标签名[att]</code></li></ol><h4 id="_25-1-2-结构伪类选择器" tabindex="-1"><a class="header-anchor" href="#_25-1-2-结构伪类选择器" aria-hidden="true">#</a> 25.1.2 结构伪类选择器</h4><ol><li>根据文档结构来选择元素，常用于根据父级选择器里面的子元素 <img src="https://i.loli.net/2021/03/15/KHjrG7fevaTNsnM.jpg" alt="结构伪类选择器.jpg" loading="lazy"></li><li>nth-child(n)可以选择某个父元素的一个或多个特定的子元素 <ul><li>n可以是数字，关键字和公式</li><li>n如果是数字，就是选择第n个子元素，序号从1开始</li><li>n可以是关键字：even偶数；odd奇数 <code>父类选择器 子类选择器:nth-chile(even/odd)</code></li><li>n可以是公式，n是一个从0开始每次+1往后计算的；此处必须是n不能是其他字母</li><li>会把父类的所有孩子都标上序号，执行时先看nth-child(n)，再看子类选择器是否匹配</li></ul></li><li>nth-of-type(n)会把指定了元素的孩子标上序号，先看子类选择器，再看后面的n</li></ol><h4 id="_25-1-3-伪元素选择器" tabindex="-1"><a class="header-anchor" href="#_25-1-3-伪元素选择器" aria-hidden="true">#</a> 25.1.3 伪元素选择器</h4><ol><li>利用CSS创建新标签元素，不需要HTML标签，简化HTML结构 <img src="https://i.loli.net/2021/03/16/XIuNozyJB2fRZmt.jpg" alt="常见伪元素选择器.jpg" loading="lazy"></li><li>before和after创建一个元素，但属于行内元素</li><li>新创建的这个元素在文档树中是找不到的，所以我们称为伪元素</li><li>语法 <code>element::before{}</code></li><li>里面必须写content属性，里面写文字内容</li><li>before在父元素内容的前面创建元素，after在父元素内容的后面插入元素</li><li>伪元素选择器和标签选择器一样，权重为1</li><li>可以用来清除浮动</li></ol><h3 id="_25-2-css3盒子模型" tabindex="-1"><a class="header-anchor" href="#_25-2-css3盒子模型" aria-hidden="true">#</a> 25.2 CSS3盒子模型</h3><ol><li>CSS3中可以通过box-sizing来指定盒子模型，有两个值：content-box;border-box</li><li>box-sizing默认是content-box，盒子大小=width+padding+border</li><li>box-sizing为border-box时，盒子最终大小为width；但有前提：padding+border&lt; width</li></ol><h3 id="_25-3-css3滤镜filter" tabindex="-1"><a class="header-anchor" href="#_25-3-css3滤镜filter" aria-hidden="true">#</a> 25.3 CSS3滤镜filter</h3><ol><li>filter CSS属性将模糊或颜色偏移等图形效果应用于元素</li><li>语法 <code>filter 函数();</code></li><li>blur()函数模糊处理，数值越大越模糊</li></ol><h3 id="_25-4-css3-calc函数" tabindex="-1"><a class="header-anchor" href="#_25-4-css3-calc函数" aria-hidden="true">#</a> 25.4 CSS3 calc函数</h3><ol><li>calc()函数让声明一些CSS属性值时执行一些计算</li></ol><h3 id="_25-5-css3过渡" tabindex="-1"><a class="header-anchor" href="#_25-5-css3过渡" aria-hidden="true">#</a> 25.5 CSS3过渡</h3><ol><li>过渡动画:从一个状态渐渐得过渡到另一个状态</li><li>语法 <code>transition: 要过渡的属性 花费时间 运动曲线 何时开始</code></li><li>属性：想要变化的css属性，宽度高度 背景颜色 内外边距 要想所有属性直接写all</li><li>花费时间：单位是秒，必须写单位</li><li>运动曲线：默认是ease</li><li>何时开始：单位是秒（必须写单位）可以设置延迟触发时间，默认是0s</li><li>谁来变换给谁加transition，不写在:hover里</li><li>如果需要多个属性，用逗号分隔</li></ol><h3 id="_25-6-css3转换transform" tabindex="-1"><a class="header-anchor" href="#_25-6-css3转换transform" aria-hidden="true">#</a> 25.6 CSS3转换transform</h3><h4 id="_25-6-1-2d转换" tabindex="-1"><a class="header-anchor" href="#_25-6-1-2d转换" aria-hidden="true">#</a> 25.6.1 2D转换</h4><ol><li>2D转换是改变标签在二维平面上的位置和形状的一种技术</li><li>同时写的时候要把位移先写</li></ol><h5 id="移动-translate" tabindex="-1"><a class="header-anchor" href="#移动-translate" aria-hidden="true">#</a> 移动：translate</h5><ol><li>改变元素在页面中的位置</li><li>语法 <code>transform: translate(x,y) |transform: translateX(n)</code></li><li>定义2D转换中的移动，沿着X和Y轴移动元素</li><li>最大优点：不会影响其他元素的位置</li><li>百分比单位是相对于自身元素的</li><li>对行内标签没有效果</li></ol><h5 id="旋转-rotate" tabindex="-1"><a class="header-anchor" href="#旋转-rotate" aria-hidden="true">#</a> 旋转：rotate</h5><ol><li>让元素在2维平面内顺时针旋转或者逆时针旋转</li><li>语法 <code>transform: rotate(度数)</code></li><li>rotate里面写度数，单位是deg，且不能省略</li><li>角度为正，顺时针旋转</li><li>默认旋转中心是元素的中心点</li></ol><h5 id="设置元素转换中心点" tabindex="-1"><a class="header-anchor" href="#设置元素转换中心点" aria-hidden="true">#</a> 设置元素转换中心点</h5><ol><li>语法 <code>transform-origin: x y;</code></li><li>后面的参数x、y要用空格隔开</li><li>x y默认转换的中心点是元素的中心点（50% 50%）</li><li>还可以给x y设置像素或者方位名词</li></ol><h5 id="缩放-scale" tabindex="-1"><a class="header-anchor" href="#缩放-scale" aria-hidden="true">#</a> 缩放：scale</h5><ol><li>控制元素的放大还是缩小</li><li>语法 <code>transform: scale(x,y)</code></li><li>x、y用逗号隔开</li><li><code>transform: scale(1,1)</code>不变，<code>transform: scale(2,2)</code>放大一倍</li><li>如果只写一个参数则默认两个参数一致</li><li>优势：可以设置转换中心点，默认以中心点缩放。而且不影响其他盒子</li></ol><h5 id="_2d转换综合写法" tabindex="-1"><a class="header-anchor" href="#_2d转换综合写法" aria-hidden="true">#</a> 2D转换综合写法</h5><ol><li>格式 <code>transform: translate() rotate() scale()</code></li><li>顺序会映像转换效果，位移要放在最前面</li></ol><h3 id="_25-7-css3动画" tabindex="-1"><a class="header-anchor" href="#_25-7-css3动画" aria-hidden="true">#</a> 25.7 CSS3动画</h3><ol><li>先定义动画</li><li>再使用动画</li></ol><h4 id="_25-7-1-keyframes定义动画" tabindex="-1"><a class="header-anchor" href="#_25-7-1-keyframes定义动画" aria-hidden="true">#</a> 25.7.1 keyframes定义动画</h4><ol><li>语法</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@keyframes</span> 动画名称</span> <span class="token punctuation">{</span>
    <span class="token selector">0%</span> <span class="token punctuation">{</span>
        开始的样式
    <span class="token punctuation">}</span>
    <span class="token selector">100%</span><span class="token punctuation">{</span>
        结束的样式
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>动画序列 <ul><li>0%是动画开始；100%是动画完成。这中柜子就是动画序列</li><li>可以用from to关键字代替0%和100%</li></ul></li></ol><h4 id="_25-7-2-元素使用动画" tabindex="-1"><a class="header-anchor" href="#_25-7-2-元素使用动画" aria-hidden="true">#</a> 25.7.2 元素使用动画</h4><ol><li>语法 <code>animation-name:动画名称;animation-duration:持续时间;</code></li><li>可以添加多个动画用逗号隔开</li></ol><h4 id="_25-7-3-动画常见属性" tabindex="-1"><a class="header-anchor" href="#_25-7-3-动画常见属性" aria-hidden="true">#</a> 25.7.3 动画常见属性</h4><ol><li>animation-name：动画名字，必须写</li><li>animation-duration：动画完成一个周期所需的事件秒或者毫秒，必须写</li><li>animation-timing-function：规定动画的速度曲线，默认ease <ul><li><img src="https://i.loli.net/2021/03/31/p89BSVWsI4qU2vu.png" alt="animation-timing-function值.png" loading="lazy"></li><li>steps就是分几步完成动画</li></ul></li><li>animation-delay：规定何时开始，默认0</li><li>animation-iteration-count：规定动画被播放的次数，默认1；可以选择infinite</li><li>animation-direction：规定动画是否在下一周期你想播放，默认是normal；alternate逆播放</li><li>animation-fill-mode：规定动画结束后状态，保持forwards；回到其实位置backwards</li><li>animation-play-state：规定动画是都正在运行或暂停，默认是running；paused暂停</li></ol><h4 id="_25-7-4-动画简写属性" tabindex="-1"><a class="header-anchor" href="#_25-7-4-动画简写属性" aria-hidden="true">#</a> 25.7.4 动画简写属性</h4><ol><li>语法 <code>animation:动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 动画开始或结束的状态</code></li></ol><h2 id="_26-移动端基础" tabindex="-1"><a class="header-anchor" href="#_26-移动端基础" aria-hidden="true">#</a> 26 移动端基础</h2><h3 id="_26-1-meta视口标签" tabindex="-1"><a class="header-anchor" href="#_26-1-meta视口标签" aria-hidden="true">#</a> 26.1 meta视口标签</h3><ol><li>语法 <code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, user=scalable=no,initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&gt;</code></li><li>属性说明 <img src="https://i.loli.net/2021/03/27/pwEM8zuanek1ql6.png" alt="属性说明.png" loading="lazy"></li></ol><h3 id="_26-2-二倍图" tabindex="-1"><a class="header-anchor" href="#_26-2-二倍图" aria-hidden="true">#</a> 26.2 二倍图</h3><ol><li>由于视网膜屏技术，设计移动端时要放大2倍来设计，防止模糊</li><li>背景缩放background-size：规定背景图像的尺寸</li><li>语法 <code>background-size: 背景图片宽度 背景图片高度;</code></li><li>只写一个参数是指定的宽度，高度等比例缩放</li><li>cover把背景图像扩展至足够大，使背景图像完全覆盖背景区域，可能有部分背景图片显示不全</li><li>contain把图像扩展至最大尺寸，使其宽度和高度完全适应内容区域，可能由部分内容存在空白</li></ol><h2 id="_27-流式布局float、clear和vertical-align属性将失效" tabindex="-1"><a class="header-anchor" href="#_27-流式布局float、clear和vertical-align属性将失效" aria-hidden="true">#</a> 27 流式布局float、clear和vertical-align属性将失效</h2><h3 id="_27-1-flex布局父项常见属性" tabindex="-1"><a class="header-anchor" href="#_27-1-flex布局父项常见属性" aria-hidden="true">#</a> 27.1 flex布局父项常见属性</h3><h4 id="_27-1-1-flex-direction" tabindex="-1"><a class="header-anchor" href="#_27-1-1-flex-direction" aria-hidden="true">#</a> 27.1.1 flex-direction</h4><ol><li>设置主轴的方向，项目的排列方向</li><li>属性值 <ul><li>row：默认值，从左到右</li><li>row-reverse：从右到左</li><li>column：从上到下</li><li>column-reverse：从下到上</li></ul></li></ol><h4 id="_27-1-2-justify-content" tabindex="-1"><a class="header-anchor" href="#_27-1-2-justify-content" aria-hidden="true">#</a> 27.1.2 justify-content</h4><ol><li>设置主轴上的子元素排列方式</li><li>属性值 <ul><li>flex-start：默认值，从头部开始</li><li>flex-end：贴着尾部对齐</li><li>center：居中对齐</li><li>space-around：平分剩余空间</li><li>space-between：先两边贴边再平分剩余空间</li></ul></li></ol><h4 id="_27-1-3-flex-warp" tabindex="-1"><a class="header-anchor" href="#_27-1-3-flex-warp" aria-hidden="true">#</a> 27.1.3 flex-warp</h4><ol><li>设置子元素是否换行</li><li>flex布局中默认子元素是不换行的，放不下会缩小子元素</li><li>属性 <ul><li>nowarp：默认，不换行</li><li>warp：会换行</li></ul></li></ol><h4 id="_27-1-4-align-content" tabindex="-1"><a class="header-anchor" href="#_27-1-4-align-content" aria-hidden="true">#</a> 27.1.4 align-content</h4><ol><li>设置侧轴上的子元素排列方式（多行）</li><li>子项出现换行的情况</li><li>属性 <ul><li>flex-start：从上到下</li><li>flex-end：从下到上</li><li>center：挤在一起居中</li><li>space-around：子项在册周平分神域空间</li><li>space-between：梓州在侧周先分布两头，再平分神域空间</li><li>stretch： 默认值，拉伸</li></ul></li></ol><h4 id="_27-1-5-align-items" tabindex="-1"><a class="header-anchor" href="#_27-1-5-align-items" aria-hidden="true">#</a> 27.1.5 align-items</h4><ol><li>设置侧轴上的子元素排列方式（单行）</li><li>属性 <ul><li>flex-start：从上到下</li><li>flex-end：从下到上</li><li>center：挤在一起居中</li><li>stretch： 默认值，拉伸</li></ul></li></ol><h4 id="_27-1-6-flex-flow" tabindex="-1"><a class="header-anchor" href="#_27-1-6-flex-flow" aria-hidden="true">#</a> 27.1.6 flex-flow</h4><ol><li>flex-direction和flex-warp的连写</li><li>语法 <code>flex-flow: row warp;</code></li></ol><h3 id="_27-2-flex布局子项常见属性" tabindex="-1"><a class="header-anchor" href="#_27-2-flex布局子项常见属性" aria-hidden="true">#</a> 27.2 flex布局子项常见属性</h3><h4 id="_27-2-1-flex属性" tabindex="-1"><a class="header-anchor" href="#_27-2-1-flex属性" aria-hidden="true">#</a> 27.2.1 flex属性</h4><ol><li>定义子项目分配剩余空间，用flex来表示占多少份数</li><li>语法 <code>flex: 份数;</code></li><li>默认是0</li></ol><h4 id="_27-2-2-align-self" tabindex="-1"><a class="header-anchor" href="#_27-2-2-align-self" aria-hidden="true">#</a> 27.2.2 align-self</h4><ol><li>控制子项自己在侧轴上的排列方式</li><li>允许某个项目与其他项目不一样的对其方式</li></ol><h4 id="_27-2-3-order" tabindex="-1"><a class="header-anchor" href="#_27-2-3-order" aria-hidden="true">#</a> 27.2.3 order</h4><ol><li>定义项目的排列顺序</li><li>数值越小，排列越靠前，默认是0</li></ol><h2 id="_28-rem适配布局" tabindex="-1"><a class="header-anchor" href="#_28-rem适配布局" aria-hidden="true">#</a> 28 rem适配布局</h2><h3 id="_28-1-rem基础" tabindex="-1"><a class="header-anchor" href="#_28-1-rem基础" aria-hidden="true">#</a> 28.1 rem基础</h3><ol><li>rem是一个相对单位（root em）</li><li>其基准是html元素的字体大小</li></ol><h3 id="_28-2-媒体查询" tabindex="-1"><a class="header-anchor" href="#_28-2-媒体查询" aria-hidden="true">#</a> 28.2 媒体查询</h3><ol><li>媒体查询（Meida Query）是CSS3新语法</li><li>使用@media查询，可以针对不用的媒体类型定义不同的样式</li><li>@media可以针对不同的屏幕粗存设置不同的样式</li><li>重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面</li><li>语法</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> 媒体类型 关键字 <span class="token punctuation">(</span>媒体特性<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>媒体类型 <ul><li>all：用于所有设备</li><li>print：用于打印机和打印预览</li><li>screen：用于电脑屏幕，平板电脑，智能手机</li></ul></li><li>关键字 <ul><li>and：且</li><li>not：非</li><li>only：置顶某个特定媒体类型</li></ul></li><li>媒体特性 <ul><li>width：定义输出设备中页面课件区域的宽度</li><li>min-width：定义输出设备中页面最小可见区域宽度</li><li>max-width：定义输出设备中页面最大可见区域宽度</li></ul></li></ol><h3 id="_28-3-媒体查询引入资源" tabindex="-1"><a class="header-anchor" href="#_28-3-媒体查询引入资源" aria-hidden="true">#</a> 28.3 媒体查询引入资源</h3><ol><li>写几套css针对不同的屏幕引入</li><li><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;#&quot; media=&quot;screen and (min-width: 320px)&quot;&gt;</code></li></ol><h3 id="_28-4-less基础" tabindex="-1"><a class="header-anchor" href="#_28-4-less基础" aria-hidden="true">#</a> 28.4 less基础</h3><ol><li>less是CSS的扩展语言，也称为CSS预处理器</li></ol><h4 id="_28-4-1-less变量" tabindex="-1"><a class="header-anchor" href="#_28-4-1-less变量" aria-hidden="true">#</a> 28.4.1 less变量</h4><ol><li>语法 <code>@变量名:值;</code></li><li>变量命名规范 <ul><li>必须有@为前缀</li><li>不能包含特殊字符串</li><li>不能以数字开头</li><li>大小写敏感</li></ul></li></ol><h4 id="_28-4-2-less嵌套" tabindex="-1"><a class="header-anchor" href="#_28-4-2-less嵌套" aria-hidden="true">#</a> 28.4.2 less嵌套</h4><ol><li>子元素的样式直接写在父元素里面</li><li>伪类、交际选择器在内层选择器前面加&amp;</li></ol><h4 id="_28-4-3-less运算" tabindex="-1"><a class="header-anchor" href="#_28-4-3-less运算" aria-hidden="true">#</a> 28.4.3 less运算</h4><ol><li>任何数字、颜色或者变量都可以参与运算（加减乘除）</li><li>除法不能直接使用，需要加括号包含起来</li><li>运算符左右必须用空格隔开</li><li>两数运算只有一个有单位，以有单位的为准</li><li>如果两个数单位不一，最后结果以第一个数的单位为准</li><li>颜色也可以运算</li></ol><h2 id="_29-响应式布局" tabindex="-1"><a class="header-anchor" href="#_29-响应式布局" aria-hidden="true">#</a> 29 响应式布局</h2><h3 id="_29-1-布局容器" tabindex="-1"><a class="header-anchor" href="#_29-1-布局容器" aria-hidden="true">#</a> 29.1 布局容器</h3><ol><li>根据屏幕宽度确定布局容器大小，布局容器宽度是确定的</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span>0 auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 超小屏幕 */</span>
<span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>767px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
    <span class="token selector">.container</span> <span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 小屏幕 */</span>
<span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>768px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
    <span class="token selector">.container</span> <span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 750px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 中等屏幕 */</span>
<span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>992px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
    <span class="token selector">.container</span> <span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 970px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 大屏幕下 */</span>
<span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>1200px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
    <span class="token selector">.container</span> <span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 1170px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_29-2-bootstrap使用" tabindex="-1"><a class="header-anchor" href="#_29-2-bootstrap使用" aria-hidden="true">#</a> 29.2 bootstrap使用</h3><h4 id="_29-2-1-创建文件夹结构" tabindex="-1"><a class="header-anchor" href="#_29-2-1-创建文件夹结构" aria-hidden="true">#</a> 29.2.1 创建文件夹结构</h4><ol><li>复制Bootstrap相关文件夹</li></ol><h4 id="_29-2-2-创建html骨架结构" tabindex="-1"><a class="header-anchor" href="#_29-2-2-创建html骨架结构" aria-hidden="true">#</a> 29.2.2 创建html骨架结构</h4><h4 id="_29-2-3-引入相关样式文件" tabindex="-1"><a class="header-anchor" href="#_29-2-3-引入相关样式文件" aria-hidden="true">#</a> 29.2.3 引入相关样式文件</h4><p><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;bootstrap/css/文件名&quot;&gt;</code></p><h4 id="_29-2-4-书写内容" tabindex="-1"><a class="header-anchor" href="#_29-2-4-书写内容" aria-hidden="true">#</a> 29.2.4 书写内容</h4><ol><li>bootstrap通过类来控制样式</li><li>修改样式的时候注意权重问题</li></ol><h3 id="_29-3-ootstrap布局容器" tabindex="-1"><a class="header-anchor" href="#_29-3-ootstrap布局容器" aria-hidden="true">#</a> 29.3 ootstrap布局容器</h3><ol><li>bootstrap需要为页面内容和栅格系统包裹一个.container容器</li><li>container类 <ul><li>响应式布局容器 固定宽度</li><li>大屏（&gt;=1200px）宽度定位1170px</li><li>中屏（&gt;=992px）宽度定位970px</li><li>小屏（&gt;=768px）宽度定位750px</li><li>超小屏100%</li></ul></li><li>container-fluid类 <ul><li>流式布局容器 百分百宽度</li><li>占据全部视口（viewport）的容器</li><li>适合于单独做移动端开发</li></ul></li></ol><h3 id="_29-4-bootstrap栅格系统" tabindex="-1"><a class="header-anchor" href="#_29-4-bootstrap栅格系统" aria-hidden="true">#</a> 29.4 bootstrap栅格系统</h3><ol><li>将页面布局划分为等宽的列，然后通过列数的定义来模块化页面布局</li><li>bootstrap将container自动分为12列</li><li><img src="https://i.loli.net/2021/04/15/4ofBlHWK63wsgXh.png" alt="QQ截图20210415211806.png" loading="lazy"><ul><li>行（row）必须放在container容器里面</li><li>实现列的平均划分需要给列添加类前缀</li><li>类前缀意思 <ul><li>xs-extra small：超小</li><li>sm-small：小</li><li>md-medium：中等</li><li>lg-large：大</li></ul></li><li>列（column）大于12，多余的列所在的元素江北作为一个整体另起一行排列</li><li>每一列默认有左右15像素的padding</li><li>可以同事为一列指定对个设备的类名，以便划分不同份数例如 <code>class=&quot;col-md-4 col-sm-6&quot;</code></li></ul></li></ol><h4 id="_29-4-1-列嵌套" tabindex="-1"><a class="header-anchor" href="#_29-4-1-列嵌套" aria-hidden="true">#</a> 29.4.1 列嵌套</h4><ol><li>栅格系统内置的栅格系统将内容再次嵌套。可以通过添加一个新的.row元素和一系列.col-sn等元素分割已经存在的列中</li><li>列嵌套最好加一个行盒子，这样可以取消父元素的padding</li></ol><h4 id="_29-4-2-列偏移" tabindex="-1"><a class="header-anchor" href="#_29-4-2-列偏移" aria-hidden="true">#</a> 29.4.2 列偏移</h4><ol><li>使用 <code>.col-md-offset-份数</code>类可以将列向右侧偏移</li></ol><h4 id="_29-4-3-列排序" tabindex="-1"><a class="header-anchor" href="#_29-4-3-列排序" aria-hidden="true">#</a> 29.4.3 列排序</h4><ol><li>通过使用 <code>.col-md-push-份数</code>和 <code>.col-md-pull-份数</code>类很容易改变列的顺序</li><li>push往右推，pull往左拉</li></ol><h4 id="_29-4-4-响应式工具" tabindex="-1"><a class="header-anchor" href="#_29-4-4-响应式工具" aria-hidden="true">#</a> 29.4.4 响应式工具</h4><ol><li>利用媒体查询功能，使用这些工具类可以方便针对不同设备展示或隐藏页面内容 <img src="https://i.loli.net/2021/04/16/oepNdR5r7DTi1hK.png" alt="响应式工具.png" loading="lazy"></li></ol>`,161);function g(f,_){const s=t("ExternalLinkIcon");return o(),c("div",null,[r,p,u,h,k,a("ol",null,[a("li",null,[a("a",v,[i("icomoon字体库(opens new window)"),e(s)])]),a("li",null,[a("a",b,[i("iconfont字体库(opens new window)"),e(s)])])]),m])}const w=l(d,[["render",g],["__file","01css.html.vue"]]);export{w as default};
