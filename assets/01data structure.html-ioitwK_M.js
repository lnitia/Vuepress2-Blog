const e=JSON.parse(`{"key":"v-60f0675a","path":"/basics/data%20structure/01data%20structure.html","title":"js数据结构与算法","lang":"zh-CN","frontmatter":{"icon":"list","date":"2024-01-11T00:00:00.000Z","category":["数据结构"],"tag":["基础"],"order":1,"excerpt":"<p>《学习JavaScript数据结构与算法》阅读总结</p>","editLink":false,"description":"抽象数据类型ADT（Abstract Data Type） 1 数组Array 最简单的内存数据结构，数组在内存中为固定大小的连续的内存块（有些内存未被使用） 内存：每个字节分配一个地址，内存块的地址是内存中第一个字节的地址 通过增删改查 (/frontend/js/01js.html#_9-数组array)实现动态列表 时间复杂度(大O表示法): 读...","head":[["meta",{"property":"og:url","content":"http://xlinwork.online/basics/data%20structure/01data%20structure.html"}],["meta",{"property":"og:site_name","content":"lnitia's blog"}],["meta",{"property":"og:title","content":"js数据结构与算法"}],["meta",{"property":"og:description","content":"抽象数据类型ADT（Abstract Data Type） 1 数组Array 最简单的内存数据结构，数组在内存中为固定大小的连续的内存块（有些内存未被使用） 内存：每个字节分配一个地址，内存块的地址是内存中第一个字节的地址 通过增删改查 (/frontend/js/01js.html#_9-数组array)实现动态列表 时间复杂度(大O表示法): 读..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-22T09:12:29.000Z"}],["meta",{"property":"article:author","content":"lnitia"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:published_time","content":"2024-01-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-22T09:12:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"js数据结构与算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-22T09:12:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lnitia\\",\\"url\\":\\"http://xlinwork.online\\"}]}"]]},"headers":[{"level":2,"title":"1 数组Array","slug":"_1-数组array","link":"#_1-数组array","children":[{"level":3,"title":"1.1 JavaScript的数组方法参考","slug":"_1-1-javascript的数组方法参考","link":"#_1-1-javascript的数组方法参考","children":[]}]},{"level":2,"title":"2 链表LinkedList","slug":"_2-链表linkedlist","link":"#_2-链表linkedlist","children":[{"level":3,"title":"2.1 数组vs链表","slug":"_2-1-数组vs链表","link":"#_2-1-数组vs链表","children":[]},{"level":3,"title":"2.2 创建链表","slug":"_2-2-创建链表","link":"#_2-2-创建链表","children":[]},{"level":3,"title":"2.3 双向链表","slug":"_2-3-双向链表","link":"#_2-3-双向链表","children":[]},{"level":3,"title":"2.4 循环链表","slug":"_2-4-循环链表","link":"#_2-4-循环链表","children":[]}]},{"level":2,"title":"3 栈Stack","slug":"_3-栈stack","link":"#_3-栈stack","children":[{"level":3,"title":"3.1 创建栈","slug":"_3-1-创建栈","link":"#_3-1-创建栈","children":[]},{"level":3,"title":"3.2 通用进制转换算法","slug":"_3-2-通用进制转换算法","link":"#_3-2-通用进制转换算法","children":[]}]},{"level":2,"title":"4 队列Queue","slug":"_4-队列queue","link":"#_4-队列queue","children":[{"level":3,"title":"4.1 创建队列","slug":"_4-1-创建队列","link":"#_4-1-创建队列","children":[]},{"level":3,"title":"4.2 循环队列","slug":"_4-2-循环队列","link":"#_4-2-循环队列","children":[]}]},{"level":2,"title":"5 集合Set","slug":"_5-集合set","link":"#_5-集合set","children":[{"level":3,"title":"5.1 创建集合","slug":"_5-1-创建集合","link":"#_5-1-创建集合","children":[]},{"level":3,"title":"5.2 集合运算","slug":"_5-2-集合运算","link":"#_5-2-集合运算","children":[]},{"level":3,"title":"5.3 ES6中的Set类","slug":"_5-3-es6中的set类","link":"#_5-3-es6中的set类","children":[]}]},{"level":2,"title":"6 字典和散列表","slug":"_6-字典和散列表","link":"#_6-字典和散列表","children":[{"level":3,"title":"6.1 字典Dictionary - 映射Map(ES6)","slug":"_6-1-字典dictionary-映射map-es6","link":"#_6-1-字典dictionary-映射map-es6","children":[]},{"level":3,"title":"6.2 散列表（哈希表）HashMap","slug":"_6-2-散列表-哈希表-hashmap","link":"#_6-2-散列表-哈希表-hashmap","children":[]}]},{"level":2,"title":"7 树","slug":"_7-树","link":"#_7-树","children":[{"level":3,"title":"7.1 树结构","slug":"_7-1-树结构","link":"#_7-1-树结构","children":[]},{"level":3,"title":"7.2 二叉树","slug":"_7-2-二叉树","link":"#_7-2-二叉树","children":[]},{"level":3,"title":"7.3 树的遍历","slug":"_7-3-树的遍历","link":"#_7-3-树的遍历","children":[]},{"level":3,"title":"7.4 搜索树中的值","slug":"_7-4-搜索树中的值","link":"#_7-4-搜索树中的值","children":[]},{"level":3,"title":"7.5 其他二叉树","slug":"_7-5-其他二叉树","link":"#_7-5-其他二叉树","children":[]}]},{"level":2,"title":"8 图","slug":"_8-图","link":"#_8-图","children":[{"level":3,"title":"8.1 图的相关术语","slug":"_8-1-图的相关术语","link":"#_8-1-图的相关术语","children":[]},{"level":3,"title":"8.2 图的表示","slug":"_8-2-图的表示","link":"#_8-2-图的表示","children":[]},{"level":3,"title":"8.3 创建图类","slug":"_8-3-创建图类","link":"#_8-3-创建图类","children":[]},{"level":3,"title":"8.4 图的遍历","slug":"_8-4-图的遍历","link":"#_8-4-图的遍历","children":[]}]},{"level":2,"title":"9 排序和搜索算法","slug":"_9-排序和搜索算法","link":"#_9-排序和搜索算法","children":[{"level":3,"title":"9.1 排序算法","slug":"_9-1-排序算法","link":"#_9-1-排序算法","children":[]},{"level":3,"title":"9.2 搜索算法","slug":"_9-2-搜索算法","link":"#_9-2-搜索算法","children":[]},{"level":3,"title":"9.3 随机算法","slug":"_9-3-随机算法","link":"#_9-3-随机算法","children":[]}]},{"level":2,"title":"10 算法补充","slug":"_10-算法补充","link":"#_10-算法补充","children":[{"level":3,"title":"10.1 分而治之","slug":"_10-1-分而治之","link":"#_10-1-分而治之","children":[]},{"level":3,"title":"10.2 动态规划","slug":"_10-2-动态规划","link":"#_10-2-动态规划","children":[]},{"level":3,"title":"10.3 贪心算法","slug":"_10-3-贪心算法","link":"#_10-3-贪心算法","children":[]},{"level":3,"title":"10.4 回溯算法","slug":"_10-4-回溯算法","link":"#_10-4-回溯算法","children":[]}]},{"level":2,"title":"11 算法复杂度","slug":"_11-算法复杂度","link":"#_11-算法复杂度","children":[{"level":3,"title":"11.1 大O表示法","slug":"_11-1-大o表示法","link":"#_11-1-大o表示法","children":[]},{"level":3,"title":"11.2 NP完全理论","slug":"_11-2-np完全理论","link":"#_11-2-np完全理论","children":[]}]}],"git":{"createdTime":1706770421000,"updatedTime":1729588349000,"contributors":[{"name":"lnitia","email":"1776568708@qq.com","commits":2}]},"readingTime":{"minutes":42.82,"words":12845},"filePathRelative":"basics/data structure/01data structure.md","localizedDate":"2024年1月11日","autoDesc":true}`);export{e as data};
