import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as a,f as o}from"./app-0mkQjek1.js";const r={},t=o('<h1 id="茄子科技一面" tabindex="-1"><a class="header-anchor" href="#茄子科技一面" aria-hidden="true">#</a> 茄子科技一面</h1><h2 id="_1-青岛项目的亮点" tabindex="-1"><a class="header-anchor" href="#_1-青岛项目的亮点" aria-hidden="true">#</a> 1. 青岛项目的亮点</h2><h2 id="_2-前端新技术有哪些了解" tabindex="-1"><a class="header-anchor" href="#_2-前端新技术有哪些了解" aria-hidden="true">#</a> 2. 前端新技术有哪些了解</h2><p>webview，</p><h2 id="_3-express和nodejs相关知识" tabindex="-1"><a class="header-anchor" href="#_3-express和nodejs相关知识" aria-hidden="true">#</a> 3. express和nodejs相关知识</h2><p>// 1. 导入验证表单数据的中间件</p><p>const expressJoi = require(&#39;@escook/express-joi&#39;)</p><h2 id="_4-周报登录模块如何实现" tabindex="-1"><a class="header-anchor" href="#_4-周报登录模块如何实现" aria-hidden="true">#</a> 4. 周报登录模块如何实现</h2><ol><li>登录无账号=&gt;注册</li><li>登录成功=&gt;token放入cookie/localstorage，持久化</li><li>请求拦截时判断有无token，没有跳回登陆界面</li><li>密码加密处理</li></ol><h2 id="_5-登录持久化如何实现" tabindex="-1"><a class="header-anchor" href="#_5-登录持久化如何实现" aria-hidden="true">#</a> 5. 登录持久化如何实现</h2><ol><li>cookie</li><li>localstorage</li><li>对密码进行加密</li><li>请求拦截时获取登录信息，有就直接放入，登录持久化</li></ol><h2 id="_6-token被别人拿到-如何解决" tabindex="-1"><a class="header-anchor" href="#_6-token被别人拿到-如何解决" aria-hidden="true">#</a> 6. token被别人拿到，如何解决</h2><ol><li><p>对token进行加密</p><p>加密后的token被其他人得到以后，需要使用密钥进行解密后才能使用</p></li><li><p>验证token对应的ip地址</p><p>每次请求可以将token和请求的对应的ip地址或设备id保存起来，放到数据库或者redis缓存中，如果后面请求token对应的ip地址或设备id不一样，则视为非法请求</p></li><li><p>采用https</p><p>HTTPS对请求进行加密和认证，减少其他用户抓取到token的可能性</p></li><li><p>token+时间戳+请求url合并加盐签名</p><p>就算token被盗了，也只能在有限的时间内有效</p></li></ol>',13),l=[t];function n(d,h){return i(),a("div",null,l)}const p=e(r,[["render",n],["__file","qiezi1.html.vue"]]);export{p as default};
